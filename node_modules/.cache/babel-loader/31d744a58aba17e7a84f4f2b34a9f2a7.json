{"ast":null,"code":"var _jsxFileName = \"/Users/zelin/starlink/src/components/Main.js\";\nimport React, { Component } from 'react';\nimport SatSetting from './SatSetting';\nimport SatelliteList from './SatelliteList';\nimport { NEARBY_SATELLITE, STARLINK_CATEGORY, SAT_API_KEY } from '../constant';\nimport Axios from 'axios';\n\nclass Main extends Component {\n  constructor() {\n    super();\n\n    this.trackOnClick = () => {\n      console.log(`tracking ${this.state.selected}`);\n    };\n\n    this.addOrRemove = (item, status) => {\n      // let list = this.state.selected;\n      let {\n        selected: list\n      } = this.state;\n      const found = list.some(entry => entry.satid === item.satid);\n\n      if (status && !found) {\n        list.push(item);\n      }\n\n      if (!status && found) {\n        list = list.filter(entry => {\n          return entry.satid !== item.satid;\n        });\n      }\n\n      console.log(list);\n      this.setState({\n        selected: list\n      });\n    };\n\n    this.showNearbySatellite = setting => {\n      this.fetchSatellite(setting);\n    };\n\n    this.fetchSatellite = setting => {\n      const {\n        observerLat,\n        observerLong,\n        observerAlt,\n        radius\n      } = setting;\n      const url = `${NEARBY_SATELLITE}/${observerLat}/${observerLong}/${observerAlt}/${radius}/${STARLINK_CATEGORY}/&apiKey=${SAT_API_KEY}`;\n      this.setState({\n        loadingSatellites: true\n      });\n      Axios.get(url).then(response => {\n        this.setState({\n          satInfo: response.data,\n          loadingSatellites: false,\n          // successfully get data from a new search -> remove all previous selected items\n          selected: []\n        });\n      }).catch(error => {\n        console.log('err in fetch satellite -> ', error);\n        this.setState({\n          loadingSatellites: false\n        });\n      });\n    };\n\n    this.state = {\n      loadingSatellites: false,\n      selected: []\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"left-side\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(SatSetting, {\n      onShow: this.showNearbySatellite,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(SatelliteList, {\n      satInfo: this.state.satInfo,\n      loading: this.state.loadingSatellites,\n      onSelectionChange: this.addOrRemove,\n      disableTrack: this.state.selected.length === 0,\n      trackOnclick: this.trackOnClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"right-side\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }, \"right\"));\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["/Users/zelin/starlink/src/components/Main.js"],"names":["React","Component","SatSetting","SatelliteList","NEARBY_SATELLITE","STARLINK_CATEGORY","SAT_API_KEY","Axios","Main","constructor","trackOnClick","console","log","state","selected","addOrRemove","item","status","list","found","some","entry","satid","push","filter","setState","showNearbySatellite","setting","fetchSatellite","observerLat","observerLong","observerAlt","radius","url","loadingSatellites","get","then","response","satInfo","data","catch","error","render","length"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport SatSetting from './SatSetting';\nimport SatelliteList from './SatelliteList';\nimport { NEARBY_SATELLITE, STARLINK_CATEGORY, SAT_API_KEY } from '../constant';\nimport Axios from 'axios';\n\nclass Main extends Component {\n    constructor(){\n        super();\n        this.state = {\n            loadingSatellites: false,\n            selected: [],\n          }\n      }\n  \n      trackOnClick = () => {\n        console.log(`tracking ${this.state.selected}`);\n      }\n  \n      addOrRemove = (item, status) => {\n        // let list = this.state.selected;\n        let { selected: list } = this.state;\n        const found = list.some( entry => entry.satid === item.satid);\n  \n        if(status && !found){\n            list.push(item)\n        }\n  \n        if(!status && found){\n            list = list.filter( entry => {\n                return entry.satid !== item.satid;\n            });\n        }\n        \n        console.log(list);\n        this.setState({\n          selected: list\n        })\n      }\n\n      showNearbySatellite = (setting) => {\n        this.fetchSatellite(setting);\n      }\n  \n      fetchSatellite = (setting) => {\n        const {observerLat, observerLong, observerAlt, radius} = setting;\n        const url = `${NEARBY_SATELLITE}/${observerLat}/${observerLong}/${observerAlt}/${radius}/${STARLINK_CATEGORY}/&apiKey=${SAT_API_KEY}`;\n  \n        this.setState({\n            loadingSatellites: true,\n          })\n        Axios.get(url)\n            .then(response => {\n                this.setState({\n                    satInfo: response.data,\n                    loadingSatellites: false,\n                    // successfully get data from a new search -> remove all previous selected items\n                    selected: [],\n                })\n            })\n            .catch(error => {\n                console.log('err in fetch satellite -> ', error);\n                this.setState({\n                    loadingSatellites: false,\n                })\n            })\n      }\n\n    render() {\n        return (\n            <div className='main'>\n                <div className=\"left-side\">\n                    <SatSetting onShow={this.showNearbySatellite} />\n                    <SatelliteList satInfo={this.state.satInfo} \n                    loading={this.state.loadingSatellites} \n                    onSelectionChange={this.addOrRemove}\n                    disableTrack={this.state.selected.length === 0}\n                    trackOnclick={this.trackOnClick}/>\n                </div>\n                <div className=\"right-side\">\n                    right\n                </div>\n            </div>\n        );\n    }\n}\nexport default Main;"]},"metadata":{},"sourceType":"module"}